{
  "uid" : "e7c66fd93d853229",
  "name" : "test_listing_data",
  "fullName" : "test.test_conduit.TestConduit#test_listing_data",
  "historyId" : "5f9c2661cf79d9ba49e7f9105fe68da3",
  "time" : {
    "start" : 1628444514818,
    "stop" : 1628444540255,
    "duration" : 25437
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_conduit.TestConduit object at 0x7fcf9dde8ac0>\n\n    def test_listing_data(self):\n        self.test_login()\n        time.sleep(3)\n        self.driver.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n    \n        time.sleep(5)\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Article Title\"]').send_keys(\"Chocolate lollipop oat cake\")\n        self.driver.find_elements_by_xpath('//form//input')[2].send_keys(\"bonbon\")\n        self.driver.find_element_by_xpath('//button[normalize-space(text()=\"Publish Article\")]').click()\n        time.sleep(3)\n        self.driver.find_element_by_xpath('//a[@href=\"#/@Tester12@gmail.com/\"]').click()\n        time.sleep(3)\n        assert self.driver.find_element_by_xpath('//h4').text == \"Tester12@gmail.com\"\n        assert self.driver.find_element_by_xpath('//a[@class=\"author router-link-exact-active router-link-active\"]').text == \"Tester12@gmail.com\"\n        # assert self.driver.find_element_by_xpath('//h1').text == \"Chocolate lollipop oat cake\"\n        # assert self.driver.find_element_by_xpath('//a[@href=\"#/tag/bonbon\"]').text == \"bonbon\"\n    \n        print(self.driver.find_element_by_xpath('//h4').text)\n        print(self.driver.find_element_by_xpath('//a[@class=\"author router-link-exact-active router-link-active\"]').text)\n        print(self.driver.find_element_by_xpath('//h1').text)\n        print(self.driver.find_element_by_xpath('//a[@href=\"#/tag/bonbon\"]').text)\n    \n>       delete_btn = WebDriverWait(\n                self.driver, 10).until(\n                EC.visibility_of_element_located((By.XPATH, ('//button[@class=\"btn btn-outline-danger btn-sm\"]')))\n        )\n\ntest/test_conduit.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7f91fa7b1379b25208e757eda25dc22e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fcf9d93ba00>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <test_conduit.TestConduit object at 0x7fcf9dde8ac0>\n\n    def test_listing_data(self):\n        self.test_login()\n        time.sleep(3)\n        self.driver.find_element_by_xpath('//a[@href=\"#/editor\"]').click()\n    \n        time.sleep(5)\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Article Title\"]').send_keys(\"Chocolate lollipop oat cake\")\n        self.driver.find_elements_by_xpath('//form//input')[2].send_keys(\"bonbon\")\n        self.driver.find_element_by_xpath('//button[normalize-space(text()=\"Publish Article\")]').click()\n        time.sleep(3)\n        self.driver.find_element_by_xpath('//a[@href=\"#/@Tester12@gmail.com/\"]').click()\n        time.sleep(3)\n        assert self.driver.find_element_by_xpath('//h4').text == \"Tester12@gmail.com\"\n        assert self.driver.find_element_by_xpath('//a[@class=\"author router-link-exact-active router-link-active\"]').text == \"Tester12@gmail.com\"\n        # assert self.driver.find_element_by_xpath('//h1').text == \"Chocolate lollipop oat cake\"\n        # assert self.driver.find_element_by_xpath('//a[@href=\"#/tag/bonbon\"]').text == \"bonbon\"\n    \n        print(self.driver.find_element_by_xpath('//h4').text)\n        print(self.driver.find_element_by_xpath('//a[@class=\"author router-link-exact-active router-link-active\"]').text)\n        print(self.driver.find_element_by_xpath('//h1').text)\n        print(self.driver.find_element_by_xpath('//a[@href=\"#/tag/bonbon\"]').text)\n    \n>       delete_btn = WebDriverWait(\n                self.driver, 10).until(\n                EC.visibility_of_element_located((By.XPATH, ('//button[@class=\"btn btn-outline-danger btn-sm\"]')))\n        )\n\ntest/test_conduit.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7f91fa7b1379b25208e757eda25dc22e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fcf9d93ba00>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d39db2ab23820f12",
      "name" : "log",
      "source" : "d39db2ab23820f12.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "c16f3d90ebf26795",
      "name" : "stdout",
      "source" : "c16f3d90ebf26795.txt",
      "type" : "text/plain",
      "size" : 72
    }, {
      "uid" : "8451ff94c13e80fe",
      "name" : "stderr",
      "source" : "8451ff94c13e80fe.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_conduit"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit"
  }, {
    "name" : "host",
    "value" : "fv-az81-527"
  }, {
    "name" : "thread",
    "value" : "3887-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_conduit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e7c66fd93d853229.json",
  "parameterValues" : [ ]
}